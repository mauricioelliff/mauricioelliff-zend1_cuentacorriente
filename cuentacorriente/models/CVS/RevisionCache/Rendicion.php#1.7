<?php

/*
 * Una RendiciÃ³n es la que efectuan los coordinadores a Sede Central.
 * 
 * 
 */

require_once ("misFunciones.php");

class Rendicion 
{
    private $_id;       
    private $_sedes_id;
    // private $_grupo_elementosvaluados; // CUotas, DEX examenes, PLAtaforma
    private $_fecha_desde;
    private $_fecha_hasta;
    private $_total_matriculas;
    private $_total_cuotas;
    private $_total_examenes;
    private $_total_plataformas;
    private $_total_reiki_matriculas;
    private $_total_reiki_cuotas;
    private $_sede_rindio_a_central;        // flag
    private $_sede_rindio_a_formador;       // flag
    private $_sede_rindio_a_coordinador;    // flag    
    private $_central_recibio_rendicion;    // flag
    private $_central_reviso_rendicion;     // flag
    private $_fecha_hora_de_creacion; 
    private $_fecha_hora_de_rendicion_a_central;
    

    public function __construct( array $valores )
    {
        $this->_id              = isset( $valores['id'] )? $valores['id'] : null;
        $this->_sedes_id        = isset( $valores['sedes_id'] )? $valores['sedes_id'] : null;       
        // $this->_grupo_elementosvaluados = isset( $valores['grupo_elementosvaluados'] )? $valores['grupo_elementosvaluados'] : 'CU';       
        $this->_fecha_desde     = isset( $valores['fecha_desde'] )? $valores['fecha_desde'] : null; // datetimeMicroseconds();  
        $this->_fecha_hasta     = isset( $valores['fecha_hasta'] )? $valores['fecha_hasta'] : datetimeMicroseconds();  
        $this->_total_matriculas= isset( $valores['total_matriculas'] )? $valores['total_matriculas'] : null;
        $this->_total_cuotas    = isset( $valores['total_cuotas'] )? $valores['total_cuotas'] : null;
        $this->_total_examenes  = isset( $valores['total_examenes'] )? $valores['total_examenes'] : null;
        $this->_total_plataformas = isset( $valores['total_plataformas'] )? $valores['total_plataformas'] : null;
        $this->_total_reiki_matriculas = isset( $valores['total_reiki_matriculas'] )? $valores['total_reiki_matriculas'] : null;
        $this->_total_reiki_cuotas = isset( $valores['total_reiki_cuotas'] )? $valores['total_reiki_cuotas'] : null;
        // $this->_total           = isset( $valores['total'] )? $valores['total'] : null;
        $this->_sede_rindio_a_central       = isset( $valores['sede_rindio_a_central'] )? $valores['sede_rindio_a_central'] : 0;
        $this->_sede_rindio_a_formador      = isset( $valores['sede_rindio_a_formador'] )? $valores['sede_rindio_a_formador'] : 0;
        $this->_sede_rindio_a_coordinador   = isset( $valores['sede_rindio_a_coordinador'] )? $valores['sede_rindio_a_coordinador'] : 0;
        $this->_central_recibio_rendicion   = isset( $valores['central_recibio_rendicion'] )? $valores['central_recibio_rendicion'] : 0;
        $this->_central_reviso_rendicion    = isset( $valores['central_reviso_rendicion'] )? $valores['central_reviso_rendicion'] : 0;
        $this->_fecha_hora_de_creacion              = isset( $valores['fecha_hora_de_creacion'] )? $valores['fecha_hora_de_creacion'] : datetimeMicroseconds(); //date('Y-m-d H:i:s')
        $this->_fecha_hora_de_rendicion_a_central   = isset( $valores['fecha_hora_de_rendicion_a_central'] )? $valores['fecha_hora_de_rendicion_a_central'] : null;
    }

    public function getId()
    {
        return $this->_id;
    }

    public function getSedesId()
    {
        return $this->_sedes_id;
    }

    public function getFechaDesde()
    {
        return $this->_fecha_desde;
    }

    public function getFechaHasta()
    {
        return $this->_fecha_hasta;
    }
    
    public function setFechaHasta($fecha)
    {
        $this->_fecha_hasta = $fecha;
    }

    public function getTotalMatriculas(){
        return $this->_total_matriculas;
    }
    public function getTotalCuotas(){
        return $this->_total_cuotas;
    }
    public function getTotalExamenes(){
        return $this->_total_examenes;
    }
    public function getTotalPlataformas(){
        return $this->_total_plataformas;
    }
    public function getTotalReikiMatriculas(){
        return $this->_total_reiki_matriculas;
    }
    public function getTotalReikiCuotas(){
        return $this->_total_reiki_cuotas;
    }

    public function setTotalMatriculas( $total ){
        return $this->_total_matriculas = $total;
    }
    public function setTotalCuotas( $total ){
        return $this->_total_cuotas = $total;
    }
    public function setTotalExamenes( $total ){
        return $this->_total_examenes = $total;
    }
    public function setTotalPlataformas( $total ){
        return $this->_total_plataformas = $total;
    }
    public function setTotalReikiMatriculas( $total ){
        return $this->_total_reiki_matriculas = $total;
    }
    public function setTotalReikiCuotas( $total ){
        return $this->_total_reiki_cuotas = $total;
    }

    public function sedeRindioACentral(){
        return $this->_sede_rindio_a_central;
    }
    public function sedeRindioAFormador(){
        return $this->_sede_rindio_a_formador;
    }
    public function sedeRindioACoordinador(){
        return $this->_sede_rindio_a_coordinador;
    }
    public function centralRecibioRendicion(){
        return $this->_central_recibio_rendicion;
    }
    public function centralRevisoRendicion(){
        return $this->_central_reviso_rendicion;
    }

    public function getFechaHoraDeCreacion()
    {
        return $this->_fecha_hora_de_creacion;
    }

    public function getFechaHoraDeRendicionACentral()
    {
        return $this->_fecha_hora_de_rendicion_a_central;
    }
    
    
    public function sumar1Milisegundo( $fecha=null )
    {
        $fecha = ( is_null($fecha) )? $this->getFechaHasta() : $fecha;
        $date = substr( $fecha, 0, 10 );
        $microtime = substr( $fecha, -6 );
        $microtime2 = $microtime+1;
        return substr( $fecha, 0, -6 ).$microtime2;
    }



     /*
     * Convierte el objeto en array.
     * Debe hacerse desde la propia clase pues se trata de variables privadas.
     */
    public function convertirEnArray()
    {
        //return get_object_vars($this); //esto lo devuelve con los underscord
        $miIterator=array();
        foreach($this as $key => $value) {
            $key=substr($key,1); //con esto le quito el underscord primero.
            $miIterator[$key]=$value;
        }
        return $miIterator;
    }



}