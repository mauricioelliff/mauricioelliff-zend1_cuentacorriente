<?php

/*
 * Una RendiciÃ³n es la que efectuan los coordinadores a Sede Central.
 * 
 * 
 */

require_once ("misFunciones.php");

class Rendicion 
{
    private $_id;       
    private $_sedes_id;
    private $_grupo_elementosvaluados; // CUotas, DEX examenes, PLAtaforma
    private $_fecha_desde;
    private $_fecha_hasta;
    private $_importe;

    public function __construct( array $valores )
    {
        $this->_id              = isset( $valores['id'] )? $valores['id'] : null;
        $this->_sedes_id        = isset( $valores['sedes_id'] )? $valores['sedes_id'] : null;       
        $this->_grupo_elementosvaluados 
                                = isset( $valores['grupo_elementosvaluados'] )? $valores['grupo_elementosvaluados'] : 'CU';       
        $this->_fecha_desde     = isset( $valores['fecha_desde'] )? $valores['fecha_desde'] : null; // datetimeMicroseconds();  
        $this->_fecha_hasta     = isset( $valores['fecha_hasta'] )? $valores['fecha_hasta'] : datetimeMicroseconds();  
        $this->_importe         = isset( $valores['importe'] )? $valores['importe'] : null;
    }

    public function getId()
    {
        return $this->_id;
    }

    public function getSedesId()
    {
        return $this->_sedes_id;
    }

    public function getGrupoElementosValuados()
    {
        return $this->_grupo_elementosvaluados;
    }

    public function getFechaDesde()
    {
        return $this->_fecha_desde;
    }

    public function getFechaHasta()
    {
        return $this->_fecha_hasta;
    }
    
    public function setFechaHasta($fecha)
    {
        $this->_fecha_hasta = $fecha;
    }

    public function getImporte()
    {
        return $this->_importe;
    }

    public function setImporte( $importe )
    {
        return $this->_importe = $importe;
    }
    
    
    public function sumar1Milisegundo( $fecha=null )
    {
        $fecha = ( is_null($fecha) )? $this->getFechaHasta() : $fecha;
        $date = substr( $fecha, 0, 10 );
        $microtime = substr( $fecha, -6 );
        $microtime2 = $microtime+1;
        return substr( $fecha, 0, -6 ).$microtime2;
    }



     /*
     * Convierte el objeto en array.
     * Debe hacerse desde la propia clase pues se trata de variables privadas.
     */
    public function convertirEnArray()
    {
        //return get_object_vars($this); //esto lo devuelve con los underscord
        $miIterator=array();
        foreach($this as $key => $value) {
            $key=substr($key,1); //con esto le quito el underscord primero.
            $miIterator[$key]=$value;
        }
        return $miIterator;
    }



}